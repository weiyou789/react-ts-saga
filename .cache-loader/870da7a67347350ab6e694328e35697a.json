{"remainingRequest":"/Users/weiyouzhi/Documents/test/react-ts/node_modules/thread-loader/dist/cjs.js!/Users/weiyouzhi/Documents/test/react-ts/node_modules/babel-loader/lib/index.js!/Users/weiyouzhi/Documents/test/react-ts/node_modules/ts-loader/index.js??ref--7-3!/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts","dependencies":[{"path":"/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts","mtime":1541730155176},{"path":"/Users/weiyouzhi/Documents/test/react-ts/.babelrc","mtime":1541143394762},{"path":"/Users/weiyouzhi/Documents/test/react-ts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiyouzhi/Documents/test/react-ts/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/weiyouzhi/Documents/test/react-ts/node_modules/babel-loader/lib/index.js","mtime":1530808242000},{"path":"/Users/weiyouzhi/Documents/test/react-ts/node_modules/ts-loader/index.js","mtime":1509365414000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.dataToString = dataToString;\nexports.isString = isString;\nexports.deepClone = deepClone;\nexports.enumToArray = enumToArray;\nexports.mapBuildTree = mapBuildTree;\nexports.filterCurrency = filterCurrency;\nexports.debounce = debounce;\nexports.myFetch = myFetch;\n\nrequire('whatwg-fetch');\n\n(function () {\n    var enterModule = require('react-hot-loader').enterModule;\n\n    enterModule && enterModule(module);\n})();\n\n/*\n* 对象转字符串\n* */\nfunction dataToString(data) {\n    var array = [];\n    var index = 0;\n    for (var item in data) {\n        if (data[item]) {\n            array[index++] = [item, data[item]];\n        }\n    }\n    return new URLSearchParams(array).toString();\n}\n/*\n* isString\n* */\nfunction isString(object) {\n    return typeof object === 'string';\n}\n/*\n* 深拷贝\n* */\nfunction deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n/*\n* 枚举转化数组方法\n* */\nfunction enumToArray(enums, enumV) {\n    if (enumV === void 0) {\n        enumV = {};\n    }\n    var array = Object.keys(enums).map(function (el, index) {\n        return {\n            value: enumV[el] || index,\n            title: enums[el]\n        };\n    });\n    return array;\n}\n/*\n* 构建树状数据\n* */\nfunction mapBuildTree(list, field) {\n    var root = {\n        id: -1,\n        parentId: '',\n        children: [],\n        ids: [-1]\n    };\n    var traverse = function traverse(tree, node, index, indexs) {\n        if (tree.id === node.parentId) {\n            node.ids = tree.ids.concat([node.id]);\n            if (!tree.children) {\n                tree.children = [];\n                tree.children.push(node);\n            } else {\n                tree.children.push(node);\n            }\n            indexs.push(index);\n        } else if (tree.children) {\n            tree.children.map(function (item) {\n                traverse(item, node, index, indexs);\n            });\n        }\n    };\n    var setTree = function setTree(data, preLeng) {\n        var indexs = [];\n        for (var i = 0; i < data.length; i++) {\n            data[i].id = data[i][field];\n            data[i].ids = [data[i].id];\n            data[i].key = \"\" + data[i].parentId + data[i].id;\n            traverse(root, data[i], i, indexs);\n        }\n        indexs.reverse().map(function (item) {\n            data.splice(item, 1);\n        });\n        if (data.length > 0 && data.length < preLeng) {\n            setTree(data, data.length);\n        }\n        return root.children;\n    };\n    return setTree(list.slice(), list.slice().length);\n}\n/*\n* 格式化价格\n* */\nfunction filterCurrency(value) {\n    return Number(value).toFixed(2);\n}\n/*\n* 去抖函数debounce\n* */\nfunction debounce(fn, delay, param) {\n    var timer;\n    if (timer) {\n        clearTimeout(timer);\n    }\n    timer = setTimeout(function () {\n        fn(param);\n    }, delay);\n}\n/*\n* Fetch封装\n* */\nfunction myFetch(url, data, method) {\n    if (method === void 0) {\n        method = 'GET';\n    }\n    var initObj = {};\n    //url = api + url\n    var dataStr = '';\n    if (data) {\n        dataStr = dataToString(data);\n    }\n    if (method === 'GET') {\n        if (data) {\n            if (url.indexOf('?') > -1) {\n                url += '&' + dataStr;\n            } else {\n                url += '?' + dataStr;\n            }\n        }\n    } else {\n        initObj = {\n            body: dataStr,\n            headers: new Headers({\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }),\n            method: method\n        };\n    }\n    return fetch(url, initObj).then(function (response) {\n        return response.json();\n    });\n}\n;\n\n(function () {\n    var reactHotLoader = require('react-hot-loader').default;\n\n    var leaveModule = require('react-hot-loader').leaveModule;\n\n    if (!reactHotLoader) {\n        return;\n    }\n\n    reactHotLoader.register(dataToString, 'dataToString', '/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts');\n    reactHotLoader.register(isString, 'isString', '/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts');\n    reactHotLoader.register(deepClone, 'deepClone', '/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts');\n    reactHotLoader.register(enumToArray, 'enumToArray', '/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts');\n    reactHotLoader.register(mapBuildTree, 'mapBuildTree', '/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts');\n    reactHotLoader.register(filterCurrency, 'filterCurrency', '/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts');\n    reactHotLoader.register(debounce, 'debounce', '/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts');\n    reactHotLoader.register(myFetch, 'myFetch', '/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts');\n    leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/weiyouzhi/Documents/test/react-ts/src/utils/index.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport 'whatwg-fetch';\r\ninterface EnumToArrayRes {\r\n    value: number | string;\r\n    title: string;\r\n}\r\n\r\n/*\r\n* 对象转字符串\r\n* */\r\n\r\nexport function dataToString(data: object){\r\n    const array: any = []\r\n    let index = 0\r\n    for (const item in data) {\r\n        if (data[item]) {\r\n            array[index++] = [item, data[item]]\r\n        }\r\n    }\r\n    return new URLSearchParams(array).toString()\r\n}\r\n\r\n/*\r\n* isString\r\n* */\r\nexport function isString(object: any) {\r\n    return typeof object === 'string'\r\n}\r\n\r\n/*\r\n* 深拷贝\r\n* */\r\nexport function deepClone(obj) {\r\n    return JSON.parse(JSON.stringify(obj))\r\n}\r\n\r\n/*\r\n* 枚举转化数组方法\r\n* */\r\nexport function enumToArray(enums, enumV = {}): EnumToArrayRes[] {\r\n    const array = Object.keys(enums).map((el, index) => {\r\n        return {\r\n            value: enumV[el] || index,\r\n            title: enums[el],\r\n        }\r\n    })\r\n    return array as EnumToArrayRes[]\r\n}\r\n\r\n/*\r\n* 构建树状数据\r\n* */\r\nexport function mapBuildTree(list, field) {\r\n    const root = {\r\n        id: -1,\r\n        parentId: '',\r\n        children: [],\r\n        ids: [-1]\r\n    }\r\n    const traverse = (tree, node, index, indexs) => {\r\n        if (tree.id === node.parentId) {\r\n            node.ids = [...tree.ids, node.id]\r\n            if (!tree.children) {\r\n                tree.children = []\r\n                tree.children.push(node)\r\n            } else {\r\n                tree.children.push(node)\r\n            }\r\n            indexs.push(index)\r\n        } else if (tree.children) {\r\n            tree.children.map((item) => {\r\n                traverse(item, node, index, indexs)\r\n            })\r\n        }\r\n    }\r\n    const setTree = (data, preLeng) => {\r\n        const indexs = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            data[i].id = data[i][field]\r\n            data[i].ids = [data[i].id]\r\n            data[i].key = `${data[i].parentId}${data[i].id}`\r\n            traverse(root, data[i], i, indexs)\r\n        }\r\n        indexs.reverse().map((item) => {\r\n            data.splice(item, 1)\r\n        })\r\n        if (data.length > 0 && data.length < preLeng) {\r\n            setTree(data, data.length)\r\n        }\r\n        return root.children\r\n    }\r\n    return setTree(list.slice(), list.slice().length)\r\n}\r\n\r\n/*\r\n* 格式化价格\r\n* */\r\nexport function filterCurrency(value) {\r\n    return Number(value).toFixed(2)\r\n}\r\n\r\n/*\r\n* 去抖函数debounce\r\n* */\r\nexport function debounce(fn, delay, param) {\r\n    let timer\r\n    if (timer) {\r\n        clearTimeout(timer)\r\n    }\r\n    timer = setTimeout(() => {\r\n        fn(param)\r\n    }, delay)\r\n}\r\n\r\n\r\n/*\r\n* Fetch封装\r\n* */\r\nexport function myFetch(\r\n    url: string,\r\n    data?: object,\r\n    method: string = 'GET'\r\n): Promise<Response>{\r\n    let initObj = {}\r\n    //url = api + url\r\n    let dataStr = ''\r\n    if (data) {\r\n        dataStr = dataToString(data)\r\n    }\r\n    if (method === 'GET') {\r\n        if (data) {\r\n            if (url.indexOf('?') > -1) {\r\n                url += '&' + dataStr\r\n            } else {\r\n                url += '?' + dataStr\r\n            }\r\n        }\r\n    } else {\r\n        initObj = {\r\n            body: dataStr,\r\n            headers: new Headers({\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            method\r\n        }\r\n    }\r\n    return fetch(url, initObj).then(response => response.json())\r\n}\r\n"],"sourceRoot":""}]}